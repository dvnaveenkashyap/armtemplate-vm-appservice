{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "minimumTlsVersion": {
      "type": "string"
    },
    "supportsHttpsTrafficOnly": {
     "type": "bool"
    },
    "allowBlobPublicAccess": {
      "type": "bool"
    },
    "windowsOSVersion": {
      "type": "string",
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "nicName": {
      "type": "string"
    },
    "addressPrefix": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "subnetPrefix": {
      "type": "string"
    },
    "publicIPAddressName": {
      "type": "string"
    },
    "vmName": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "networkSecurityGroupName": {
      "type": "string"
    },
    "webAppName": {
      "type": "string",
      "defaultValue": "[concat('webApp-', uniqueString(resourceGroup().id))]",
      "metadata": {
          "description": "Web app name."
      },
      "minLength": 2
  },
  "sku": {
      "type": "string",
      "defaultValue": "F1",
      "metadata": {
          "description": "The SKU of App Service Plan."
      }
  },
  "language": {
      "type": "string",
      "defaultValue": ".net",
      "allowedValues": [
          ".net",
          "php",
          "node",
          "html"
      ],
      "metadata": {
          "description": "The language stack of the app."
      }
  },    
  "repoUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
          "description": "Optional Git Repo URL, if empty a 'hello world' app will be deploy from the Azure-Samples repo"
    }
  }  
},
  "variables": {
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sawinvm')]",
    "nicName": "[parameters('nicName')]",
    "addressPrefix": "[parameters('addressPrefix')]",
    "subnetName": "[parameters('subnetName')]",
    "subnetPrefix": "[parameters('subnetPrefix')]",
    "publicIPAddressName": "[parameters('publicIPAddressName')]",
    "vmName": "[parameters('vmName')]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "networkSecurityGroupName": "[parameters('networkSecurityGroupName')]",
        "appServicePlanPortalName": "[concat('AppServicePlan-', parameters('webAppName'))]",
    "gitRepoReference":{
        ".net":"https://github.com/Azure-Samples/app-service-web-dotnet-get-started",
        "node":"https://github.com/Azure-Samples/nodejs-docs-hello-world",
        "php":"https://github.com/Azure-Samples/php-docs-hello-world",
        "html":"https://github.com/Azure-Samples/html-docs-hello-world"
    },
    "gitRepoUrl":"[if(empty(parameters('repoUrl')), variables('gitRepoReference')[parameters('language')], parameters('repoUrl'))]",
    "configReference": {
        ".net": {
            "comments": ".Net app. No additional configuration needed."
        },
        "html": {
            "comments": "HTML app. No additional configuration needed."
        },
        "php": {
            "phpVersion": "7.4"
        },
        "node": {
            "appSettings": [
                {
                    "name": "WEBSITE_NODE_DEFAULT_VERSION",
                    "value": "12.15.0"
                }
            ]
        }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {
        "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
        "supportsHttpsTrafficOnly": "[parameters('supportsHttpsTrafficOnly')]",
        "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]"
      }
    },
    {
      "apiVersion": "2019-08-01",
      "type": "Microsoft.Web/serverfarms",
      "name": "[variables('appServicePlanPortalName')]",
      "location": "[parameters('location')]",
      "sku": {
          "name": "[parameters('sku')]"
      }
    },
    {
      "apiVersion": "2019-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('webAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
      ],
      "properties": {
          "siteConfig": "[variables('configReference')[parameters('language')]]",
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]",
          "httpsOnly": true
      },
      "resources": [
          {
              "type": "sourcecontrols",
              "apiVersion": "2019-08-01",
              "name": "web",
              "location": "[parameters('location')]",
              "dependsOn": [
                  "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
              ],
              "properties": {
                  "repoUrl": "[variables('gitRepoUrl')]",
                  "branch": "master",
                  "isManualIntegration": true
              }
          }
      ]
  },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "comments":  "Default Network Security Group for template",
      "type":  "Microsoft.Network/networkSecurityGroups",
      "apiVersion":  "2019-08-01",
      "name":  "[variables('networkSecurityGroupName')]",
      "location":  "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name":  "default-allow-3389",
            "properties": {
              "priority":  1000,
              "access":  "Allow",
              "direction":  "Inbound",
              "destinationPortRange":  "3389",
              "protocol":  "Tcp",
              "sourcePortRange":  "*",
              "sourceAddressPrefix":  "*",
              "destinationAddressPrefix":  "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-11-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "CustomScriptExtension",
          "apiVersion": "2017-03-30",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[variables('vmName')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "https://raw.githubusercontent.com/naveenkashyapdv/tls/master/tls.ps1"
              ],
              "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File tls.ps1"
            }
          }
        }
      ]
    }
  ]
}

